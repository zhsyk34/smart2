<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <property name="dir" value="d:/work_logs/"/>

    <!--
        c {length }lo {length }logger {length } 缩短logger名，设置为0表示只输入logger最右边点符号之后的字符串
        C {length } class {length }	输出执行记录请求的调用者的全限定名。参数与上面的一样。尽量避免使用，除非执行速度不造成任何问题。
        F / file	输出执行记录请求的java源文件名。尽量避免使用，除非执行速度不造成任何问题。
        L / line	输出执行日志请求的行号。尽量避免使用，除非执行速度不造成任何问题。
        m / msg / message	        输出应用程序提供的信息。
        M / method	输出执行日志请求的方法名。尽量避免使用，除非执行速度不造成任何问题。
        n	输出平台先关的分行符“\n”或者“\r\n”。
        p / le / level	输出日志级别。
        r / relative	输出从程序启动到创建日志记录的时间，单位是毫秒
        t / thread	输出产生日志的线程名。
        replace(p ){r, t}	        p 为日志内容，r 是正则表达式，将p 中符合r 的内容替换为t 。        例如， "%replace(%msg){'\s', ''}"
    -->
    <!--
        格式修饰符，与转换符共同使用：
        可选的格式修饰符位于“%”和转换符之间。
        第一个可选修饰符是左对齐 标志，符号是减号“-”；
        接着是可选的最小宽度 修饰符，用十进制数表示。如果字符小于最小宽度，则左填充或右填充，默认是左填充（即右对齐），填充符为空格。如果字符大于最小宽度，字符永远不会被截断。最大宽度 修饰符，符号是点号"."后面加十进制数。如果字符大于最大宽度，则从前面截断。点符号“.”后面加减号“-”在加数字，表示从尾部截断。
    -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss} %level %c{0} %m%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${dir}/today.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${dir}%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>365</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
        <append>true</append>
        <prudent>false</prudent>
    </appender>

    <logger name="com.dnk.smart" level="DEBUG" additivity="false">
        <appender-ref ref="FILE"/>
        <appender-ref ref="STDOUT"/>
    </logger>

    <root level="DEBUG">
        <!--<appender-ref ref="STDOUT" />-->
    </root>
</configuration>